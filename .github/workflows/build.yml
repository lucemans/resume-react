name: Build & Deploy

on:
  push:
    branches:
      - dev
    tags:
      - v*

env:
  IMAGE_NAME: resume

jobs:
  build:
    runs-on: ubuntu-20.04
    name: üî® Build Package
    environment:
      name: SANDBOX
    #   url: "https://resume-staging.lvk.sh"
    steps:
      - uses: actions/checkout@v2
      - name: Build Package
        run: docker build --build-arg VERSION="${{ github.sha }}" . --tag $IMAGE_NAME
      - name: Log into Lucemans registry
        run: echo "${{ secrets.LVK_REGISTRY }}" | docker login lvk.sh -u lucemans --password-stdin
      - name: Push image
        run: |
          IMAGE_ID=${{ secrets.PACKAGE_NAME }}

          VERSION=$(echo "${{ github.sha }}" | sed -e 's,.*/\(.*\),\1,')

          echo $IMAGE_ID
          echo $VERSION

          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
  terraform:
    name: 'üì¶ Deploy - Staging'
    runs-on: ubuntu-20.04
    needs: ['build']
    environment:
      name: SANDBOX
    #   url: "https://resume-sandbox.lvk.sh"
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TERRAFORM_TOKEN }}
    - name: Dump Kubeconfig file
      run: mkdir ~/.kube && echo "${{ secrets.KUBE_CONFIG }}" | base64 -d > ~/.kube/config && KUBECONFIG=~/.kube/config
      working-directory: terraform

    - name: Terraform Init
      run: terraform init --backend-config=${{ secrets.TERRAFORM_CONFIG }}
      working-directory: terraform

    - name: Terraform Plan
      run: export TF_VAR_container="${{ secrets.PACKAGE_NAME }}:$(echo "${{ github.sha }}" | sed -e 's,.*/\(.*\),\1,')" && terraform plan
      working-directory: terraform
      env:
        TF_VAR_prefix: ${{ secrets.PREFIX }}
        TF_VAR_deployurl: ${{ secrets.DEPLOY_URL }}

    - name: Terraform Apply
      run: export TF_VAR_container="${{ secrets.PACKAGE_NAME }}:$(echo "${{ github.sha }}" | sed -e 's,.*/\(.*\),\1,')" && terraform apply -auto-approve
      working-directory: terraform
      env:
        TF_VAR_prefix: ${{ secrets.PREFIX }}
        TF_VAR_deployurl: ${{ secrets.DEPLOY_URL }}

  validate:
    name: '‚úîÔ∏è Validate Deployment'
    runs-on: ubuntu-20.04
    needs: [terraform]
    environment:
      name: SANDBOX
    steps:
    - name: Check that the page has been deployed successfully
      uses: jtalk/url-health-check-action@v1.2
      with:
        url: "https://${{ secrets.DEPLOY_URL }}"
        follow-redirect: no
        max-attempts: 5
        retry-delay: 5s

# üß™